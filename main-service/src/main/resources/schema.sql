drop table IF EXISTS part_requests, events, categories, locations, users CASCADE;
drop type IF EXISTS location;

CREATE TABLE IF NOT EXISTS users (

    id            BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name          VARCHAR(255) NOT NULL,
    email         VARCHAR(255) NOT NULL,

    CONSTRAINT    pk_user PRIMARY KEY (id),
    CONSTRAINT    UQ_USER_EMAIL UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS categories (

    id            BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name          VARCHAR(255) NOT NULL,

    CONSTRAINT    pk_category PRIMARY KEY (id)
);

CREATE TYPE location AS (

    lat dec,
    lon dec
);

CREATE TABLE IF NOT EXISTS events (

    id                  BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    annotation          VARCHAR(1023) NOT NULL,

    category_id         BIGINT NOT NULL, -- fk

    confirmed_requests  INTEGER,
    created_on          TIMESTAMP,
    description         VARCHAR(1023),
    event_date          TIMESTAMP NOT NULL,

    initiator_id        BIGINT NOT NULL, -- fk

    lat                 dec NOT NULL, -- from class Location
    lon                 dec NOT NULL, -- from class Location

    paid                Boolean NOT NULL,
    participant_limit   INTEGER,
    published_on        TIMESTAMP,
    request_moderation  Boolean,
    state               VARCHAR(255),

    title               VARCHAR(1023) NOT NULL, -- unique

    views               INTEGER,

    CONSTRAINT  pk_event PRIMARY KEY (id),

    CONSTRAINT  fk_category_id
        FOREIGN KEY (category_id)
            REFERENCES categories (id)
            ON DELETE CASCADE,

    CONSTRAINT  fk_initiator_id
        FOREIGN KEY (initiator_id)
            REFERENCES users (id)
            ON DELETE CASCADE,

    CONSTRAINT  UQ_EVENT_TITLE UNIQUE (title)
);

CREATE TABLE IF NOT EXISTS part_requests (

    id                  BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created             TIMESTAMP,
    event_id            BIGINT NOT NULL, -- fk
    requester_id        BIGINT NOT NULL, -- fk
    state               VARCHAR(255),

    CONSTRAINT  pk_part_req PRIMARY KEY (id),

    CONSTRAINT  fk_part_req_event_id
        FOREIGN KEY (event_id)
            REFERENCES events (id)
            ON DELETE CASCADE,

    CONSTRAINT  fk_part_req_requester_id
        FOREIGN KEY (requester_id)
            REFERENCES users (id)
            ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS compilations (

	id                  BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	pinned              Boolean,
	title               VARCHAR(50),

	CONSTRAINT  pk_comp PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS comp_events (

	id                  BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    comp_id             BIGINT NOT NULL, -- fk
    event_id            BIGINT NOT NULL, -- fk

	CONSTRAINT  pk_comp_events PRIMARY KEY (id),

    CONSTRAINT  fk_comp_events_comp_id
        FOREIGN KEY (comp_id)
            REFERENCES compilations (id)
            ON DELETE CASCADE,

    CONSTRAINT  fk_comp_events_event_id
        FOREIGN KEY (event_id)
            REFERENCES events (id)
            ON DELETE CASCADE
);

